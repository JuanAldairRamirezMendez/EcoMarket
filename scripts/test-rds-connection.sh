#!/bin/bash

# Script para validar conexi√≥n con AWS RDS
echo "üîç Validando conexi√≥n con AWS RDS..."

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Datos de conexi√≥n (reemplaza con tus datos reales)
DB_HOST="database-1.c702yeeu6qxd.us-east-2.rds.amazonaws.com"
DB_PORT="5432"
DB_USER="[TU_USERNAME]"  # Reemplaza con tu usuario
DB_NAME="[TU_DATABASE]"  # Reemplaza con tu base de datos

echo -e "${YELLOW}üåê Probando conectividad de red...${NC}"

# Probar conectividad b√°sica
if command -v telnet &> /dev/null; then
    echo "Probando telnet $DB_HOST $DB_PORT"
    timeout 10 telnet $DB_HOST $DB_PORT
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Puerto $DB_PORT est√° abierto${NC}"
    else
        echo -e "${RED}‚ùå No se puede conectar al puerto $DB_PORT${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  telnet no est√° disponible, probando con ping...${NC}"
    ping -c 3 $DB_HOST
fi

echo -e "\n${YELLOW}üóÑÔ∏è  Probando conexi√≥n con PostgreSQL...${NC}"

# Probar con psql si est√° disponible
if command -v psql &> /dev/null; then
    echo "Probando conexi√≥n con psql..."
    echo "IMPORTANTE: Tendr√°s que ingresar la contrase√±a cuando se solicite"
    psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "SELECT version();"
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Conexi√≥n exitosa con PostgreSQL${NC}"
    else
        echo -e "${RED}‚ùå Error en la conexi√≥n con PostgreSQL${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  psql no est√° disponible. Inst√°lalo para probar la conexi√≥n directa${NC}"
fi

echo -e "\n${YELLOW}üìã Pasos siguientes:${NC}"
echo "1. Aseg√∫rate de tener las credenciales correctas"
echo "2. Verifica que el Security Group permita conexiones desde tu IP"
echo "3. Actualiza el archivo .env con las credenciales reales"
echo "4. Ejecuta las migraciones de Prisma"